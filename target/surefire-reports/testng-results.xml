<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="11" ignored="0" total="23" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="restassuredtestsuite" duration-ms="9667" started-at="2021-04-09T11:55:13 IST" finished-at="2021-04-09T11:55:23 IST">
    <groups>
    </groups>
    <test name="restassuredtests" duration-ms="9667" started-at="2021-04-09T11:55:13 IST" finished-at="2021-04-09T11:55:23 IST">
      <class name="com.employee.testCases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="setUp" is-config="true" duration-ms="21" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="getAllEmployees" is-config="true" duration-ms="2850" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="checkResponseBody" duration-ms="2" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="checkResponseTime" duration-ms="0" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="checkStatusCode" duration-ms="0" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkstatusLine()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="checkstatusLine" duration-ms="1" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.testCases.TC001_Get_All_Employees@3e57cd70]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.testCases.TC001_Get_All_Employees -->
      <class name="com.employee.testCases.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="setUp" is-config="true" duration-ms="22" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="getAllEmployees" is-config="true" duration-ms="7412" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="checkContentType" duration-ms="1" started-at="2021-04-09T11:55:21 IST" finished-at="2021-04-09T11:55:21 IST">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke method getValue() on null object]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke method getValue() on null object
at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:44)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:34)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:53)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.header(RestAssuredResponseOptionsGroovyImpl.groovy:302)
at io.restassured.internal.RestAssuredResponseOptionsImpl.header(RestAssuredResponseOptionsImpl.java:126)
at com.employee.testCases.TC005_Delete_Employee_Record.checkContentType(TC005_Delete_Employee_Record.java:71)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="checkResponseTime" duration-ms="1" started-at="2021-04-09T11:55:21 IST" finished-at="2021-04-09T11:55:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="checkStatusCode" duration-ms="1" started-at="2021-04-09T11:55:21 IST" finished-at="2021-04-09T11:55:21 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [-1]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.employee.testCases.TC005_Delete_Employee_Record.checkStatusCode(TC005_Delete_Employee_Record.java:42)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkstatusLine()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="checkstatusLine" duration-ms="1" started-at="2021-04-09T11:55:21 IST" finished-at="2021-04-09T11:55:21 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.employee.testCases.TC005_Delete_Employee_Record.checkstatusLine(TC005_Delete_Employee_Record.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.testCases.TC005_Delete_Employee_Record@7113b13f]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-04-09T11:55:21 IST" finished-at="2021-04-09T11:55:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.testCases.TC005_Delete_Employee_Record -->
      <class name="com.employee.testCases.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="setUp" is-config="true" duration-ms="21" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="getAllEmployees" is-config="true" duration-ms="9398" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="checkContentType" duration-ms="0" started-at="2021-04-09T11:55:23 IST" finished-at="2021-04-09T11:55:23 IST">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke method getValue() on null object]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke method getValue() on null object
at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:44)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:34)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:53)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.header(RestAssuredResponseOptionsGroovyImpl.groovy:302)
at io.restassured.internal.RestAssuredResponseOptionsImpl.header(RestAssuredResponseOptionsImpl.java:126)
at com.employee.testCases.TC003_Post_Employee_Record.checkContentType(TC003_Post_Employee_Record.java:93)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="checkResponseBody" duration-ms="1" started-at="2021-04-09T11:55:23 IST" finished-at="2021-04-09T11:55:23 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.employee.testCases.TC003_Post_Employee_Record.checkResponseBody(TC003_Post_Employee_Record.java:51)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="checkResponseTime" duration-ms="1" started-at="2021-04-09T11:55:23 IST" finished-at="2021-04-09T11:55:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="checkStatusCode" duration-ms="2" started-at="2021-04-09T11:55:23 IST" finished-at="2021-04-09T11:55:23 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [-1]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.employee.testCases.TC003_Post_Employee_Record.checkStatusCode(TC003_Post_Employee_Record.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkstatusLine()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="checkstatusLine" duration-ms="1" started-at="2021-04-09T11:55:23 IST" finished-at="2021-04-09T11:55:23 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.employee.testCases.TC003_Post_Employee_Record.checkstatusLine(TC003_Post_Employee_Record.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.testCases.TC003_Post_Employee_Record@1500955a]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-04-09T11:55:23 IST" finished-at="2021-04-09T11:55:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.testCases.TC003_Post_Employee_Record -->
      <class name="com.employee.testCases.TC004_Put_Employee_Record">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="setUp" is-config="true" duration-ms="22" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="getAllEmployees" is-config="true" duration-ms="6527" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="FAIL" signature="checkContentType()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="checkContentType" duration-ms="1" started-at="2021-04-09T11:55:20 IST" finished-at="2021-04-09T11:55:20 IST">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke method getValue() on null object]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke method getValue() on null object
at org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91)
at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:44)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:34)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at io.restassured.http.Headers$getValue$4.call(Unknown Source)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.header(RestAssuredResponseOptionsGroovyImpl.groovy:302)
at io.restassured.internal.RestAssuredResponseOptionsImpl.header(RestAssuredResponseOptionsImpl.java:126)
at com.employee.testCases.TC004_Put_Employee_Record.checkContentType(TC004_Put_Employee_Record.java:93)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="checkResponseBody" duration-ms="4" started-at="2021-04-09T11:55:20 IST" finished-at="2021-04-09T11:55:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.employee.testCases.TC004_Put_Employee_Record.checkResponseBody(TC004_Put_Employee_Record.java:51)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="checkResponseTime" duration-ms="1" started-at="2021-04-09T11:55:20 IST" finished-at="2021-04-09T11:55:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="checkStatusCode" duration-ms="1" started-at="2021-04-09T11:55:20 IST" finished-at="2021-04-09T11:55:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [-1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [-1]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at com.employee.testCases.TC004_Put_Employee_Record.checkStatusCode(TC004_Put_Employee_Record.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkstatusLine()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="checkstatusLine" duration-ms="0" started-at="2021-04-09T11:55:20 IST" finished-at="2021-04-09T11:55:20 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.employee.testCases.TC004_Put_Employee_Record.checkstatusLine(TC004_Put_Employee_Record.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.testCases.TC004_Put_Employee_Record@29b5cd00]" name="tearDown" is-config="true" duration-ms="1" started-at="2021-04-09T11:55:20 IST" finished-at="2021-04-09T11:55:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.testCases.TC004_Put_Employee_Record -->
      <class name="com.employee.testCases.TC002_Get_Single_Employee_Data">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="setUp" is-config="true" duration-ms="23" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:14 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="getAllEmployees" is-config="true" duration-ms="2566" started-at="2021-04-09T11:55:14 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="checkContentType" duration-ms="3" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="checkResponseBody" duration-ms="8" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="checkResponseTime" duration-ms="0" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="checkStatusCode" duration-ms="1" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkstatusLine()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="checkstatusLine" duration-ms="0" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkstatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.employee.testCases.TC002_Get_Single_Employee_Data@38bc8ab5]" name="tearDown" is-config="true" duration-ms="0" started-at="2021-04-09T11:55:16 IST" finished-at="2021-04-09T11:55:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employee.testCases.TC002_Get_Single_Employee_Data -->
    </test> <!-- restassuredtests -->
  </suite> <!-- restassuredtestsuite -->
</testng-results>
